{"ast":null,"code":"var _jsxFileName = \"/Users/adnaneabid/Desktop/React forms/forms/src/components/Form/Form.jsx\";\nimport React from \"react\";\nimport InputBase from \"../InputBase/InputBase\";\nimport \"./Form.css\";\nimport { OTHERCARDS } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INIT_CARD = {\n  card: \"\",\n  cardHolder: \"\",\n  expiry: \"\",\n  securityCode: \"\"\n};\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.findDebitCardType = cardNumber => {\n      const regexPattern = {\n        MASTERCARD: /^5[1-5] [0-9] {1,}|^2[2-7][0-9]{1,}$/,\n        VISA: /^4[0-9]{2,}$/,\n        AMERICAN_EXPRESS: /^3[47][0-9]{5,}$/,\n        DISCOVER: /^6(?:011|5[0-9]{2})[0-9]{3,}$/\n      };\n      for (const card in regexPattern) {\n        if (cardNumber.replace(/[^\\d]/g, \"\").match(regexPattern[card])) return card;\n      }\n      return \"\";\n    };\n    this.handleValidations = (type, value) => {\n      let errorText;\n      switch (type) {\n        case \"card\":\n          errorText = Car;\n          this.setState(prevState => ({\n            cardType: this.findDebitCardType(value),\n            error: {\n              ...prevState.error,\n              cardError: \"\"\n            }\n          }));\n          // setState cardType, error\n          break;\n        case \"cardHolder\":\n          // checks for spaces and numbers\n          //setState error\n          break;\n        case \"expiry\":\n          //check format\n          //setState error\n          break;\n        case \"securityCode\":\n          //check min length\n          break;\n        default:\n          break;\n      }\n    };\n    this.handleBlur = e => this.handleValidations(e.target.name, e.target.value);\n    this.handleInputData = e => {\n      if (e.target.name === \"card\") {\n        let mask = e.target.value.split(\" \").join(\"\");\n        if (mask.length) {\n          mask = mask.match(new RegExp(\".{1,4}\", \"g\")).join(\" \");\n          this.setState(prevState => ({\n            cardData: {\n              ...prevState.cardData,\n              [e.target.name]: mask\n            }\n          }));\n        } else {\n          this.setState(prevState => ({\n            cardData: {\n              ...prevState.cardData,\n              [e.target.name]: \"\"\n            }\n          }));\n        }\n      } else {\n        this.setState(prevState => ({\n          cardData: {\n            ...prevState.cardData,\n            [e.target.name]: e.target.value\n          }\n        }));\n      }\n    };\n    this.state = {\n      cardData: INIT_CARD,\n      maxLength: OTHERCARDS.length,\n      error: {},\n      cardType: null\n    };\n  }\n  render() {\n    const inputData = [{\n      label: \"Card Number\",\n      name: \"card\",\n      type: \"text\"\n    }, {\n      label: \"CardHolders Name\",\n      name: \"cardHolder\",\n      type: \"text\"\n    }, {\n      label: \"Expiry Date (MM/YY)\",\n      name: \"expiry\",\n      type: \"text\"\n    }, {\n      label: \"Security Code\",\n      name: \"securityCode\",\n      type: \"text\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [InputBase.length ? inputData.map(item => /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: item.label,\n          type: item.type,\n          value: this.state.cardData && this.state.cardData[item.name],\n          onChange: this.handleInputData,\n          autoComplete: \"off\",\n          maxLength: this.state.maxLength,\n          name: item.name,\n          onBlur: this.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(InputBase, {\n            type: \"submit\",\n            value: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Form;","map":{"version":3,"names":["React","InputBase","OTHERCARDS","jsxDEV","_jsxDEV","INIT_CARD","card","cardHolder","expiry","securityCode","Form","Component","constructor","findDebitCardType","cardNumber","regexPattern","MASTERCARD","VISA","AMERICAN_EXPRESS","DISCOVER","replace","match","handleValidations","type","value","errorText","Car","setState","prevState","cardType","error","cardError","handleBlur","e","target","name","handleInputData","mask","split","join","length","RegExp","cardData","state","maxLength","render","inputData","label","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","placeholder","onChange","autoComplete","onBlur","className"],"sources":["/Users/adnaneabid/Desktop/React forms/forms/src/components/Form/Form.jsx"],"sourcesContent":["import React from \"react\";\nimport InputBase from \"../InputBase/InputBase\";\nimport \"./Form.css\";\nimport { OTHERCARDS } from \"../constants\";\n\nconst INIT_CARD = {\n  card: \"\",\n  cardHolder: \"\",\n  expiry: \"\",\n  securityCode: \"\",\n};\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardData: INIT_CARD,\n      maxLength: OTHERCARDS.length,\n      error: {},\n      cardType: null,\n    };\n  }\n\n  findDebitCardType = (cardNumber) => {\n    const regexPattern = {\n      MASTERCARD: /^5[1-5] [0-9] {1,}|^2[2-7][0-9]{1,}$/,\n      VISA: /^4[0-9]{2,}$/,\n      AMERICAN_EXPRESS: /^3[47][0-9]{5,}$/,\n      DISCOVER: /^6(?:011|5[0-9]{2})[0-9]{3,}$/,\n    };\n    for (const card in regexPattern) {\n      if (cardNumber.replace(/[^\\d]/g, \"\").match(regexPattern[card]))\n        return card;\n    }\n    return \"\";\n  };\n\n  handleValidations = (type, value) => {\n    let errorText;\n    switch (type) {\n      case \"card\":\n        errorText = Car;\n        this.setState((prevState) => ({\n          cardType: this.findDebitCardType(value),\n          error: {\n            ...prevState.error,\n            cardError: \"\",\n          },\n        }));\n        // setState cardType, error\n        break;\n      case \"cardHolder\":\n        // checks for spaces and numbers\n        //setState error\n        break;\n      case \"expiry\":\n        //check format\n        //setState error\n        break;\n      case \"securityCode\":\n        //check min length\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleBlur = (e) => this.handleValidations(e.target.name, e.target.value);\n\n  handleInputData = (e) => {\n    if (e.target.name === \"card\") {\n      let mask = e.target.value.split(\" \").join(\"\");\n      if (mask.length) {\n        mask = mask.match(new RegExp(\".{1,4}\", \"g\")).join(\" \");\n        this.setState((prevState) => ({\n          cardData: {\n            ...prevState.cardData,\n            [e.target.name]: mask,\n          },\n        }));\n      } else {\n        this.setState((prevState) => ({\n          cardData: {\n            ...prevState.cardData,\n            [e.target.name]: \"\",\n          },\n        }));\n      }\n    } else {\n      this.setState((prevState) => ({\n        cardData: {\n          ...prevState.cardData,\n          [e.target.name]: e.target.value,\n        },\n      }));\n    }\n  };\n\n  render() {\n    const inputData = [\n      { label: \"Card Number\", name: \"card\", type: \"text\" },\n      { label: \"CardHolders Name\", name: \"cardHolder\", type: \"text\" },\n      { label: \"Expiry Date (MM/YY)\", name: \"expiry\", type: \"text\" },\n      { label: \"Security Code\", name: \"securityCode\", type: \"text\" },\n    ];\n\n    return (\n      <div>\n        <h1>Add New Card</h1>\n        <form>\n          {InputBase.length\n            ? inputData.map((item) => (\n                <InputBase\n                  placeholder={item.label}\n                  type={item.type}\n                  value={this.state.cardData && this.state.cardData[item.name]}\n                  onChange={this.handleInputData}\n                  autoComplete=\"off\"\n                  maxLength={this.state.maxLength}\n                  name={item.name}\n                  onBlur={this.handleBlur}\n                />\n              ))\n            : null}\n\n          <div className=\"btn-wrapper\">\n            <InputBase type=\"submit\" value=\"Add Card\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}